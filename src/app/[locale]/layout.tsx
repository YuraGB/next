import React, { ReactNode, Suspense } from 'react'
import type { Metadata } from 'next'

import { Analytics } from '@vercel/analytics/react'

import { SpeedInsights } from '@vercel/speed-insights/next'
import ReactQueryProvider from '@/context/ReactQueryProvider'
import AuthProvider from '@/context/AuthProvider'
import NextUiProviderComponent from '@/context/NextUiProviderComponent'

import './globals.css'
import '@smastrom/react-rating/style.css'

import dynamic from 'next/dynamic'
import ServerIntlProvider from '@/context/i18nProvider'
import getIntl from '@/utils/intl'
const Navigation = dynamic(() => import('@/modules/navigation/Navigation'))
const Footer = dynamic(() => import('../../modules/footer'))

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children,
  params,
}: {
  children: ReactNode
  params: { locale: string }
}) {
  const intl = await getIntl(params.locale)
  return (
    <html lang={intl.locale}>
      <head>
        {/* https://app.meticulous.ai/*/}
        {(process.env.NODE_ENV === 'development' ||
          process.env.VERCEL_ENV === 'preview') && (
          // eslint-disable-next-line @next/next/no-sync-scripts
          <script
            data-project-id="3iCmTK9IupQqGwPHt1Q6HqhKqA5iEnLivImBlwer"
            data-is-production-environment="false"
            src="https://snippet.meticulous.ai/v1/meticulous.js"
          />
        )}
      </head>
      <body
        className={
          'min-h-[100dvh] flex flex-col [&>div:first-child]:min-h-[100dvh] [&>div:first-child]:flex [&>div:first-child]:flex-col bg-background'
        }
      >
        <NextUiProviderComponent>
          <ReactQueryProvider>
            <AuthProvider>
              <ServerIntlProvider messages={intl.messages} locale={intl.locale}>
                <Navigation />
                {children}
                <Suspense fallback={null}>
                  <Footer />
                </Suspense>
              </ServerIntlProvider>
            </AuthProvider>
          </ReactQueryProvider>
        </NextUiProviderComponent>
        <SpeedInsights />
        <Analytics />
      </body>
    </html>
  )
}

export async function generateStaticParams() {
  const locales = ['en', 'uk']

  return locales.map((locale) => ({ locale }))
}

export const revalidate = 60
